name: Build

on:
  push:
    branches: [ master, main ]
    tags:
      - 'v*.*.*'          # build & publish automatique quand tu pousses un tag vX.Y.Z
  release:
    types: [published]     # si tu crées la release depuis l'UI avec "Create new tag on publish"
  workflow_dispatch:        # déclenchement manuel (bouton "Run workflow")

permissions:
  contents: write

concurrency:
  group: build-${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}   # token Actions
      GH_TOKEN:     ${{ secrets.GITHUB_TOKEN }}   # ce qu'attend electron-builder

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            build_args: "--win nsis"
            artifact_name: windows-dist
          - os: ubuntu-latest
            build_args: "--linux AppImage"
            artifact_name: linux-dist
          - os: macos-latest
            build_args: "--mac dmg"
            artifact_name: macos-dist

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      # Dépendances Linux utiles pour AppImage/RPM (ignoré sur Windows/macOS)
      - name: Install Linux build deps
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libarchive-tools rpm fakeroot

      # Utilise Bash sur tous les OS (sinon Windows exécute en PowerShell)
      - name: Install deps (ci or i)
        shell: bash
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm i; fi

      # Build sur branche => artefacts seulement
      - name: Build (no publish on branch)
        if: startsWith(github.ref, 'refs/heads/')
        run: npx electron-builder ${{ matrix.build_args }} -p never

      # Build + publication si TAG ou si RELEASE publiée
      - name: Build & Publish (on tag or release)
        if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'release'
        run: npx electron-builder ${{ matrix.build_args }} -p always

      - name: Upload dist artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: dist/**
